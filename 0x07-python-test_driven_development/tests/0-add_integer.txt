The 0-add_integer Module:

Importing function from the module:
    >>> add_integer = __import__('0-add_integer').add_integer

Now Use it
    >>> add_integer(0, 1)
    1

    >>> add_integer(0, -1)
    -1

    >>> add_integer(1000.1, 1)
    1001

    >>> add_integer(1000.1, -1000.9)
    0

    >>> add_integer(0.0)
    98

    >>> add_integer(-98)
    0

    >>> add_integer(0.0, None)
    Traceback (most recent call last):
        ...
    TypeError: b must be an integer

    >>> add_integer(0, "foo")
    Traceback (most recent call last):
        ...
    TypeError: b must be an integer

    >>> add_integer("bar", 1)
    Traceback (most recent call last):
        ...
    TypeError: a must be an integer

    >>> add_integer(None)
    Traceback (most recent call last):
          ...
    TypeError: a must be an integer

    >>> add_integer((1, 1))
    Traceback (most recent call last):
              ...
    TypeError: a must be an integer

    >>> add_integer(123, [])
    Traceback (most recent call last):
          ...
    TypeError: b must be an integer

    >>> add_integer(1, float('infinity'))
    Traceback (most recent call last):
    ...
    OverflowError: cannot convert float infinity to integer
