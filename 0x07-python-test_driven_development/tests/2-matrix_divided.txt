============================
``2-matrix_divided`` module
============================

``matrix_divided()`` will take two arguments: a quotient which is a matrix
(list of lists) of integers/floats and divides it by a divided of type integer
 or floats.
::

Importing function from the module:
	>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Now Use it
	>>> matrix_divided([[1, 2, 3], [4, 5, 6], 2)
	[[0.5, 1.0, 1.5], [2.0, 2.5.0, 3.0]]
	
	>>> matrix_divided([[1, 2, 3], [4, 5, 6], 2.0)
	[[0.5, 1.0, 1.5], [2.0, 2.5, 3.0]]

	>>> matrix_divided([[2.0, 4.0, 6.0], [8.0, 10.0, 12.0], 2)
	[[1.0, 2.0,  3.0], [4.0, 5.0, 6.0]]

	>>> matrix_divided([[1, 2, 3], [4, 5, 6], [7, 8, 9]], 2)
	[[0.5, 1.0, 1.5], [2.0, 2.5 3.0], [3.5, 4.0, 4.5]]

	>>> matrix_divided([['a', 2.0, 3.0], [4.0, 5.0, 6.0], 2)
	Traceback (most recent call last):
        ...
	TypeError: matrix must be a matrix (list of lists) of integers/floats

	>>> matrix_divided([[1, 2, 3], [4, 5]], 2)
	Traceback (most recent call last):
	...
	TypeError: Each row of the matrix must have the same size

	>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 'div')
	Traceback: (most recent call last):
	...
	TypeError: div must be a number

	>>> matrix_divide([[1, 2, 3], [4, 5, 6]], 0)
	Traceback: (most recent call last):
	...
	ZeroDivisionError: division by zero
    
